@{
    Layout = null;
}
<link href="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/css/toastr.min.css" rel="stylesheet" />
<script src="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/js/toastr.min.js"></script>
<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-KK94CHFLLe+nY2dmCWGMq91rCGa5gtU4mk92HdvYe+M/SXH301p5ILy+dN9+nJOZ" crossorigin="anonymous">
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/js/bootstrap.bundle.min.js" integrity="sha384-ENjdO4Dr2bkBIFxQpeoTz1HIcje39Wm4jDKdf19U8gI4ddQ3GYNS7NTKfAdVQSZe" crossorigin="anonymous"></script>
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css">
<body>
    @Html.Partial("_Notification")
    <nav class="navbar navbar-expand-lg navbar-light bg-dark ps-5">
        <a class="navbar-brand fs-3 fw-bold text-white" href="#">MFA</a><i class="bi bi-key-fill text-white"></i><i class="bi bi-lock-fill text-white"></i>
        <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
            <span class="navbar-toggler-icon"></span>
        </button>

        <div class="collapse navbar-collapse w-100 d-flex justify-content-between" id="navbarSupportedContent">
            <ul class="navbar-nav mr-auto d-flex align-items-center justify-content-between w-100">
                <li class="nav-item active ">
                    <a class="nav-link text-white" asp-controller="Home" asp-action="HomePage">Home</a>
                </li>
                <li class="nav-item me-3">
                    <form method="post" asp-controller="Home" asp-action="Logout">
                        <button type="submit" class="nav-link fs-5 fw-bold text-white">Logout</button>
                    </form>
                </li>
            </ul>
        </div>
    </nav>

    <div class="container mt-5">
        <div class="row form-group">
            <span class="fs-4">To : <span class="text-danger">*</span></span>
            <div class="col">
                
                <input type="text"
                       class="form-control text email-input  hiding w-50"
                       id="To"
                       placeholder="Email"
                       pattern="[a-zA-Z0-9._%+-]+[a-zA-Z0-9.-]+@@+\.[a-zA-Z]{2,}" />
            </div>
        </div>
        <div id="emailFieldsContainer">
        </div>
        <div class="d-flex justify-content-between mt-2">
            <div class="">
                <button id="addEmailFieldButton" class="btn skill">Add Email Field</button>
                <button id="submitButton" class="btn savePassword">Submit</button>
            </div>
            <div class="">
                <button class="btn skill" onclick="CancelPreview();">Cancel</button>
                <button class="btn savePassword" onclick="AddPreview(@ViewBag.OrderId);">Preview</button>
            </div>
        </div>

    </div>
    <div id="preview">
    </div>
</body>
<style>
    .btn.savePassword {
        border: 2px solid black;
        border-radius: 25px;
        color: black;
        padding: 8px 33px 8px 33px;
    }
    .btn.skill {
        border: 2px solid orange;
        border-radius: 25px;
        color: #757575;
        padding: 8px 37px 8px 37px;
    }

</style>
<script src="~/lib/jquery/dist/jquery.min.js"></script>
<script>
    function CancelPreview(){
        $('#preview').empty();
    }
     $(document).ready(function() {
      var fieldCounter = 0;

      // Function to create a new email input field
      function createEmailField() {
        fieldCounter++;
        var emailField =
          '<div class="row form-group my-2">' +
          '<div class="col d-flex">' +
          '<input type="email" name="emails" class="form-control email-input  w-50" placeholder="Email"  pattern="[a-zA-Z0-9._%+-]+[a-zA-Z0-9.-]+@@+\.[a-zA-Z]{2,}" required />' +
          '<button class="btn skill cancel-button ms-2">Cancel</button>' +
          '</div>' +
          '</div>';
        return emailField;
      }

      // Add an email input field when the Add Email Field button is clicked
      $('#addEmailFieldButton').click(function() {
          
        var emptyFields = false;
        var validFields = false;

        $('.email-input').each(function() {

          if ($(this).val() === '') {
            emptyFields = true;
            return false;
          }
          if (!isValidEmail($(this).val())) {
              validFields = true;
              return false;
          }

        });

        if (emptyFields) {
          alert('Please fill in all email input fields before adding another.');
          return;
        }

        if(validFields){
            alert('Please enter valid input before adding another input.');
          return;
        }

        var emailField = createEmailField();
        $('#emailFieldsContainer').append(emailField);
      });

      // Handle cancel button click 
      $('#emailFieldsContainer').on('click', '.cancel-button', function() {
        $(this).closest('.form-group').remove();
      });

      // Handle the button click
      $('#submitButton').click(function() { 
        debugger;
       
        var emailInputs = $('.email-input');
        var emails = [];

        // Loop through each email input field and collect the values
        emailInputs.each(function() {
          var email = $(this).val();
          if (email) {
              // check field is not empty
              if (email === '') {
               alert('Please fill in all email input fields before adding another.');
                return;
              }
            // Validate the email format
            if (!isValidEmail(email)) {
              alert('Invalid email format, please check your format...');
              return false;
            }
            emails.push(email);
          }
        });

        // Check if any email input field has been filled
        if (emails.length === 0) {
          alert('Please enter at least two valid email addresses.');
          return;
        }

        // the data to be sent to the server
        var formData = {
          OrderId: @ViewBag.OrderId,
          EmailList: [...emails]
        };

        // Perform AJAX request to send email data to the server
        $.ajax({
          url: '/Home/SendInvite',
          type: 'POST',
          data: formData,
          success: function(response) {
            $('#emailFieldsContainer').empty();
            $('#To').val('');
          },
          error: function(xhr, status, error) {
            alert('Failed to send emails. Please try again later.');
          }
        });
      });
    });

    function isValidEmail(email) {
      var emailRegex = /^[A-Za-z0-9._%+-]+@@[A-Za-z0-9.-]+\.[A-Za-z]{2,}$/;
      return emailRegex.test(email);
    }

    function AddPreview(OrderId){

        var emailInputs = $('.email-input');
        var emails = [];

       
        emailInputs.each(function() {
          var email = $(this).val();
          if (email) {
            if (!isValidEmail(email)) {
              alert('Invalid email format, please check your format...');
              return false;
            }
            emails.push(email);
          }
        });
         $.ajax({
            url: '/Home/MailBody',
            type: 'POST',
            data: {
                OrderId : OrderId,
                EmailList:[...emails]
            },
            success: function(data) {
                $('#preview').html(data);
            },
            error: function(xhr, status, error) {
                alert('Failed to load preview. Please try again later.');
            }
         });
    }
</script>
































